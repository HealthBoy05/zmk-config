/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_tap_kp: hold_tap_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            retro-tap;
            tapping-term-ms = <200>;
        };

        tap_hold_kp_timed: tap_hold_kp_timed {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD_KP_TIMED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&trans        &none  &none  &none  &none          &none                                                                          &none  &none    &none      &none    &none     &trans
&kp ESCAPE    &kp Q  &kp W  &kp F  &kp P          &kp B                                                                          &kp J  &kp L    &kp U      &kp Y    &kp SEMI  &none
&kp LEFT_ALT  &kp A  &kp R  &kp S  &kp T          &kp G                                                                          &kp M  &kp N    &kp E      &kp I    &kp O     &trans
&kp LEFT_GUI  &kp X  &kp C  &kp D  &kp V          &kp Z  &none                                    &none                          &kp K  &kp H    &kp COMMA  &kp DOT  &kp FSLH  &trans
                            &none  &kp BACKSPACE  &mo 1  &tap_hold_kp_timed LEFT_CONTROL SPACE    &hold_tap_kp LEFT_SHIFT ENTER  &mo 2  &kp TAB  &none
            >;
        };

        number_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans        &trans        &trans        &trans                    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &trans  &kp N7        &kp N8        &kp N9        &trans                    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &kp N0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans                    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &trans  &trans    &trans    &trans  &trans     &trans  &trans
                              &trans        &trans        &trans  &trans    &trans  &trans    &trans    &trans
            >;
        };

        symbol_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans     &trans                &trans                 &trans         &trans                       &trans  &trans           &trans       &trans            &trans             &trans
&trans  &kp TILDE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH  &trans                       &trans  &kp AMPERSAND    &kp STAR     &kp SINGLE_QUOTE  &trans             &trans
&trans  &kp PIPE   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDER      &kp EQUAL                    &trans  &kp DOLLAR       &kp PERCENT  &kp CARET         &kp DOUBLE_QUOTES  &trans
&trans  &kp GRAVE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS      &kp PLUS   &trans    &trans  &trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH          &trans             &trans
                                         &trans                 &trans         &trans     &trans    &trans  &trans  &trans           &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
